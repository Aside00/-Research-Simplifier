# -*- coding: utf-8 -*-
"""Research Simplifier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KfKQqAaFPVre5CXT55UAkFvJJkJajFeH
"""

!pip install gradio PyPDF2 openai --quiet

import os
import gradio as gr
from PyPDF2 import PdfReader
from openai import OpenAI

client = OpenAI(api_key="sk...")

def extract_text_from_pdf(file_path):
    text = ""
    reader = PdfReader(file_path)
    for page in reader.pages:
        text += page.extract_text() + "\n"
    return text

def summarize_text(text: str) -> str:
    system_prompt = (
        "أنت محرر علمي عربي. لخص البحث بطريقة منظمة وسهلة لغير الباحثين."
    )

    user_prompt = f"""
هذا نص من بحث علمي:

{text[:5000]}  # نحدد أول 5000 حرف عشان ما يزيد الطول

المطلوب منك:
1) **أبرز ثلاث أفكار** من البحث (بالضبط 3 نقاط).
2) **تبسيط الهدف والنتيجة** لغير الباحثين، بصياغة سهلة.
نسّق الناتج كـ Markdown.
"""

    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt},
        ],
        max_tokens=800
    )

    return response.choices[0].message.content

def process_pdf(file_path):
    try:
        text = extract_text_from_pdf(file_path)
        summary = summarize_text(text)
        return summary
    except Exception as e:
        return f" خطأ أثناء المعالجة: {str(e)}"

with gr.Blocks(theme="soft") as demo:
    gr.Markdown("## 📑 تبسيط الأبحاث\n### ارفع أي بحث PDF وسيتم تبسيطه لغير الباحثين")

    with gr.Row():
        file_input = gr.File(label="📤 ارفع ملف PDF", type="filepath", file_types=[".pdf"])

    with gr.Row():
        output = gr.Markdown()

    summarize_btn = gr.Button("🚀 لخص الآن")
    summarize_btn.click(fn=process_pdf, inputs=file_input, outputs=output)

demo.launch()